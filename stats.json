{"leetcode":{"easy":13,"hard":3,"medium":9,"shas":{"0144-binary-tree-preorder-traversal":{"0144-binary-tree-preorder-traversal.cpp":"9302e4b66bb483814ddfc4b52a2bb48c610626cc","README.md":"2a9e1c4d5b165cf7667739cb5cd3e9fde9b49315","difficulty":"easy"},"README.md":{"":"bd019b145ae60aaa8e0087b8c0bd748d8c7620f9"},"0094-binary-tree-inorder-traversal":{"0094-binary-tree-inorder-traversal.cpp":"8a579faeaf1dda152ef419428eba6ce5bf36dab0","README.md":"bd34dc7858ef18ca0298bb98d645a48123cf98b8","difficulty":"easy"},"stats.json":{"":"401445fda56c28f994a44fb20dfa812424e2b21e"},"0145-binary-tree-postorder-traversal":{"0145-binary-tree-postorder-traversal.cpp":"f6011bae52b6ba4331f9569d284bb6daf2a688e0","README.md":"ac6ce4de8f4a2a59c2b312532094616b3d3c85b7","difficulty":"easy"},"0102-binary-tree-level-order-traversal":{"0102-binary-tree-level-order-traversal.cpp":"3f91374cee78015ab2aae6a7ed33d0b7f78bff06","README.md":"01b65fdfcb1f1937ab9e22e5e3338d581c1423eb","difficulty":"medium"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.cpp":"2b027497974459eb81a0524adba03bdf872761cf","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"0110-balanced-binary-tree":{"0110-balanced-binary-tree.cpp":"eb06295058e56cddda4e4db78c03bf1a718d5c6b","README.md":"170fd51aa0ec81a6f44935fc63016f2face0f2a6","difficulty":"easy"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.cpp":"29465780502488435f586d1cf927022f3e534c14","README.md":"5ef438e39aa6f6497073598c4bd2c8274ababac7","difficulty":"easy"},"0124-binary-tree-maximum-path-sum":{"0124-binary-tree-maximum-path-sum.cpp":"dd2ee26c7277460d5f7230d4f12d9a44150a1c9d","README.md":"ffa0bc8c9c787efac4955cef573cc6ed99caf29a","difficulty":"hard"},"0100-same-tree":{"0100-same-tree.cpp":"6ea46bf2e52dad1ebcbb805f7f84d6cd69a1a25b","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9","difficulty":"easy"},"0103-binary-tree-zigzag-level-order-traversal":{"0103-binary-tree-zigzag-level-order-traversal.cpp":"da45632c4c5bb9d45ab351064c173262ab9a9d83","README.md":"fcd20aa2bad60f78f450527d135d90bfbc83d83a","difficulty":"medium"},"1029-vertical-order-traversal-of-a-binary-tree":{"1029-vertical-order-traversal-of-a-binary-tree.cpp":"afa841a1e759e99a8c4d9624b566c5c255127fa7","README.md":"cc712dafc645b72db251cf84985e1f2456c15d53","difficulty":"hard"},"0199-binary-tree-right-side-view":{"0199-binary-tree-right-side-view.cpp":"30bb3f8f996ddbdc0a8dd64b3094e5b268f00e38","README.md":"e5e81cc2d06e4177eb353566d3a36bebd1431bab","difficulty":"medium"},"0101-symmetric-tree":{"0101-symmetric-tree.cpp":"3b469474467235933d17f3b0caa4bdbf002d3b5d","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0236-lowest-common-ancestor-of-a-binary-tree":{"0236-lowest-common-ancestor-of-a-binary-tree.cpp":"b494f21d5a47ecf28697f27a98b04b9500b1089e","README.md":"2e410057370d1340e00c05396cfa7ccd934457ff","difficulty":"medium"},"0662-maximum-width-of-binary-tree":{"0662-maximum-width-of-binary-tree.cpp":"8d597f6f160413d83ae5a57f944c966df0e13643","README.md":"2619fced692af0b8f6e387761a072ab41d8b29e4","difficulty":"medium"},"0078-subsets":{"0078-subsets.cpp":"433dc28b393a018b324082aed5fee5ec0f46b7b5","README.md":"fb4b5a7f5abfc5e90375a3cbd0ec5781838463eb","difficulty":"medium"},"0136-single-number":{"0136-single-number.cpp":"92c30c5c44ffab55de3a7d24eab1a8453c92056c","README.md":"c1fc84a677cd198edacf1b3bd6d029d9fb49369b","difficulty":"easy"},"2350-find-closest-number-to-zero":{"2350-find-closest-number-to-zero.cpp":"506ba53c582f953f917a7ce459c1deec7056871e","README.md":"1f67c27ca950e6aa28341d9b17d804c96e8f8b25","difficulty":"easy"},"1019-squares-of-a-sorted-array":{"1019-squares-of-a-sorted-array.cpp":"80fec1cc910aae3bc6f530c4d5cdbd68e303c4e0","README.md":"f8a2af23fecbf728443e67f86046f434e17c0226","difficulty":"easy"},"0893-all-nodes-distance-k-in-binary-tree":{"0893-all-nodes-distance-k-in-binary-tree.cpp":"60cfef2298a7f89a0985def76d27cc53566ecc84","README.md":"6ea80432027192a8ecebbc2f034145691aa50b81","difficulty":"medium"},"0222-count-complete-tree-nodes":{"0222-count-complete-tree-nodes.cpp":"3ca1b34c4d8561ee01c195d423c085afae6c7c95","README.md":"b5d031e0d7cc7a1abf0b398a1344396508c657c2","difficulty":"easy"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp":"cd5bcdb55da74a6735dd1c2a3c4c1baf50fbd367","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.cpp":"0f20abb91f84d21022ef64883720cb214cd15d69","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"},"0297-serialize-and-deserialize-binary-tree":{"0297-serialize-and-deserialize-binary-tree.cpp":"c8c3e8c3600ca8e12ef5e8a5c642089b747c4d03","README.md":"6e55c5546dbcaa3d4a9960d4483c0cb2c7337f10","difficulty":"hard"},"0175-combine-two-tables":{"0175-combine-two-tables.sql":"0e249831ee2879616fa1d1d4773d470e4ba56f72","README.md":"573fba65b630a53ea5f601b5f5c4243a4b6aa211","difficulty":"easy"}},"solved":25}}